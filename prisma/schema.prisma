// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id String @id @default(cuid())
  email String @unique
  username String @unique
  clerkId String @unique
  name String?
  image String?
  location String?
  website String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Relations One-to-many
  posts Posts[]
  comments Comment[]
  likes Like[]

  follower Follws[] @relation("following")//users who follow this user
  following Follows[] @relation("follower")//users this user follows

  notification Notification[] @relation("userNotification")//notification received.
  notificationCreated Notification[] @relation("noticationCreater")//notificaiton triggerd by user
}

model Post{
  id String @id @default(cuid())
  authorId String?
  content String?
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Relations
  authore User @relation(fields:[authorId],references:[id],onDelete:Cascade)//Cascade delete means delete all post if parent is deleted.
  comments Comment[]
  likes Like[]
  notifications Notification[]
}

model Comment{
  id String @id @default(cuid(now()))
  content String
  authoreId String
  cratedAt DateTime @default(now())
}
